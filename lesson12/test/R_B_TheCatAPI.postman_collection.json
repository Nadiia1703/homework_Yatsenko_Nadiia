{
	"info": {
		"_postman_id": "6c5286a5-bbd3-41dc-8c3a-558daf5d6b5b",
		"name": "R_B_TheCatAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28088621",
		"_collection_link": "https://universal-trinity-287039.postman.co/workspace/Yatsenko~ad624216-4fba-4ef3-af3d-133463384292/collection/28088621-6c5286a5-bbd3-41dc-8c3a-558daf5d6b5b?action=share&source=collection_link&creator=28088621"
	},
	"item": [
		{
			"name": "/images/search",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{theCatsKey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{theCatsApiUrl}}/images/search",
					"host": [
						"{{theCatsApiUrl}}"
					],
					"path": [
						"images",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "/images/upload",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"    const imageId = pm.response.json().id;\r",
							"\r",
							"    pm.expect(imageId).to.be.not.empty;\r",
							"    pm.collectionVariables.set(\"theCatPicId\", imageId);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{theCatsKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/C:/Users/n.yatsenko/Pictures/istockphoto-1443562748-612x612.jpg"
						},
						{
							"key": "sub_id",
							"value": "test",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{theCatsApiUrl}}/images/upload?x-api-key={{theCatsKey}}&Content-Type=multipart/form-data",
					"host": [
						"{{theCatsApiUrl}}"
					],
					"path": [
						"images",
						"upload"
					],
					"query": [
						{
							"key": "x-api-key",
							"value": "{{theCatsKey}}"
						},
						{
							"key": "Content-Type",
							"value": "multipart/form-data"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/images/:image_id/breeds",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{theCatsKey}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"breed_id\": \"acur\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{theCatsApiUrl}}/images/{{theCatPicId}}/breeds",
					"host": [
						"{{theCatsApiUrl}}"
					],
					"path": [
						"images",
						"{{theCatPicId}}",
						"breeds"
					]
				}
			},
			"response": []
		},
		{
			"name": "/breeds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const breeds = pm.response.json().map(x => x.id);\r",
							"    pm.expect(breeds).to.have.length.greaterThan(0);\r",
							"\r",
							"    const currentBreed = breeds[Math.floor(Math.random() * breeds.length)];\r",
							"    pm.collectionVariables.set(\"theCatbreeds\", currentBreed);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{theCatsKey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{theCatsApiUrl}}/breeds",
					"host": [
						"{{theCatsApiUrl}}"
					],
					"path": [
						"breeds"
					]
				}
			},
			"response": []
		},
		{
			"name": "/images/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const resp = pm.response.json()\r",
							"    .find(c => c.id === pm.collectionVariables.get(\"theCatPicId\"));\r",
							"\r",
							"    pm.expect(resp.breeds.map(x => x.id)).to.include(pm.collectionVariables.get(\"theCatbreeds\"));\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{theCatsKey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{theCatsApiUrl}}/images",
					"host": [
						"{{theCatsApiUrl}}"
					],
					"path": [
						"images"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "theCatsApiUrl",
			"value": "https://api.thecatapi.com/v1",
			"type": "string"
		},
		{
			"key": "theCatsKey",
			"value": "live_efiyBhhW7Iodef8KnPHKrZoegB4y80F1j5YpLJiauxN0Di0dzI8Nqy122OokaPHZ",
			"type": "string"
		},
		{
			"key": "theCatPicId",
			"value": "J4yDbP6a3",
			"type": "string"
		},
		{
			"key": "theCatbreeds",
			"value": "acur",
			"type": "string"
		}
	]
}